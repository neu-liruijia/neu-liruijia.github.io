(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{439:function(t,e,a){"use strict";a.r(e);var s=a(52),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue代码规范"}},[t._v("#")]),t._v(" Vue代码规范")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#风格规范"}},[t._v("风格规范")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"风格规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#风格规范"}},[t._v("#")]),t._v(" 风格规范")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1. 组件名称不能是一个单词，例如： Todo, 最好是 TodoItem\n2. 非根组件的data是一个函数 除了 new Vue 外的任何地方\n3. props定义要详细\n4. v-for 需要使用 key配合\n5. 组件样式需要增加作用域，防止干扰其他组件样式，scoped\n6. 单文件组件文件名称，最好大写：MyComponent.vue\n7. 基础组件的名称，最好采用特定前缀开头，例如Base\n8. 和父组件紧密耦合的子组件应该以父组件名作为前缀命名，TodoList.vue ==》 TodoListItem.vue ==> TodoListItemButton.vue\n9. 组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾: SearchButtonClear.vue\n10. JS/JSX 中的组件名应该始终是 PascalCase\n11. 在声明 prop 的时候，其命名应该始终使用 camelCase，而在模板和 JSX 中应该始终使用 kebab-case,例如：  <WelcomeMessage greeting-text="hi"/>\n    props: {\n    greetingText: String\n    }\n12. 多个 attribute 的元素应该分多行撰写，每个 attribute 一行。\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);